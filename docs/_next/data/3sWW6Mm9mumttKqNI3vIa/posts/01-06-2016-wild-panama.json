{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    em: \"em\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components), {Quote} = _components;\n  if (!Quote) _missingMdxReference(\"Quote\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Hi!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this article, I’ll tell you about some internal features of Project\\nPanama. You’ll find out how to increase the performance of your Java\\nprogram using a pure inline assembler.\"\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/wild-panama/panama.jpg\",\n          alt: \"\"\n        })\n      })\n    }), \"\\n\", _jsx(Quote, {\n      quote: \"We had two builds of jvm, seventy-five native functions, five sheets\\nof high-powered method handles, a Panama repository full of crazy\\nfeatures, and a whole galaxy of native data layouts, headers,\\ncompilers, optimizations… and also a quart of heap, a case of\\nwrappers, a pint of raw memory and two dozen AVX2 instructions. <br/>\\nNot that we needed all that for the trip to Panama, but once you get\\nlocked into a serious jvm crash collection, the tendency is to push it\\nas far as you can.\"\n    }), \"\\n\", _jsx(_components.table, {\n      children: _jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"❗\"\n          }), _jsxs(_components.th, {\n            children: [\"This article is written mostly about something that may never be released \", _jsx(\"br\", {}), \"About API that might never be seen \", _jsx(\"br\", {}), \"About code you shouldn’t use in production\"]\n          })]\n        })\n      })\n    }), \"\\n\", _jsx(_components.table, {\n      children: _jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"⚠️\"\n          }), _jsx(_components.th, {\n            children: \"A lot of information in this article is based on my personal experiments. with the internal state of Panama forest in June 2016, so it may be deprecated when you are reading it.\"\n          })]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"So, let’s begin our journey.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"welcome-to-panama\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#welcome-to-panama\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Welcome to Panama\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"http://openjdk.java.net/projects/panama/\",\n        children: \"Panama\"\n      }), \" is a new project\\nunder OpenJDK that tries to improve the connection between JVM and\\nforeign APIs, including many interfaces commonly used by C programmers.\\nIt is the missing piece in the Java ecosystem, a bridge between JAVA and\\nnative code.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The primary features that will be introduced in Project Panama are:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Native function calling and data access, respectfully, with huge JIT\\nsupport (see \", _jsx(_components.a, {\n            href: \"http://openjdk.java.net/jeps/191\",\n            children: \"JEP191\"\n          }), \")\\n(Similar problems but without huge runtime support can be solved using\\nJNR as explained here \", _jsx(_components.a, {\n            href: \"/posts/22-06-2015-jnr-fuse/\",\n            children: \"previous article\"\n          }), \")\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"New data layouts\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Special tools for wrapping native libraries\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The full overview of the problems that Panama tries to solve can be\\nfound here: \", _jsx(_components.a, {\n        href: \"https://blogs.oracle.com/jrose/entry/the_isthmus_in_the_vm\",\n        children: \"blog post\"\n      }), \"\\n(written by John Rose). But some features in the mercurial forest of\\nProject Panama don’t really belong to JEP 191. These features are Vector\\nAPI and Machine Code Snippets.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Last December, Vladimir Ivanov, one of the core contributors of Panama\\nproject made a commit where he introduced an ability to call a snippet\\nof machine code in runtime…\"\n    }), \"\\n\", _jsxs(\"div\", {\n      children: [_jsx(\"blockquote\", {\n        class: \"twitter-tweet\",\n        \"data-lang\": \"en\",\n        children: _jsxs(_components.p, {\n          children: [\"— Vladimir Ivanov (@iwan0www) \", _jsx(\"a\", {\n            href: \"https://twitter.com/iwan0www/status/672824680227708928\",\n            children: \"December 4, 2015\"\n          })]\n        })\n      }), _jsx(\"script\", {\n        async: true,\n        src: \"//platform.twitter.com/widgets.js\",\n        charset: \"utf-8\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is an amazing feature, you can make an\\ninline assembler call, crazy stuff… It’s like the new Unsafe, but even\\ncooler! It’s like writing your own intrinsic, but in runtime. In this\\npost I’ll be primarily focused on Machine Code Snippets. So let’s\\nexplore this opportunity.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"the-edge-of-the-forest\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#the-edge-of-the-forest\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"The edge of the forest\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The first program that every programmer writes in a new language is\\n\\\"Hello, World!\\\". But it’s assembler, and it is called from Java. So\\nlet’s make it simple.\\nFor example, an A+B+C function looks like this in each:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"Plain Java\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-java\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"public\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"sum\"\n        }), _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" a, \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" b, \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" c)\"]\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" a + b + c;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"X86 assembly\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-x86asm\",\n        children: [\"...\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"mov\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rax\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rsi\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"; res = arg1\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"add\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rax\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rdi\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"; res += arg2\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"add\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rax\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rdx\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"; res += arg3\"\n        }), \"\\n...\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"CodeSnippet\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-java\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"final\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MethodHandle\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"sum3\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" jdk.internal.panama.CodeSnippet.make(\\n            \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"sum3\\\"\"\n        }), \", MethodType.methodType(\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \".class,\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/*result*/\"\n        }), \"\\n                                          \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \".class \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/*rdi*/\"\n        }), \",\\n                                          \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \".class \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/*rsi*/\"\n        }), \",\\n                                          \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \".class \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/*rdx*/\"\n        }), \"),\\n            \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/* isSupported */\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x48\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x89\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xF0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// mov    rax,rsi\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x48\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x01\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xF8\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// add    rax,rdi\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x48\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x01\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xD0\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// add    rax,rdx\"\n        }), \"\\n    );\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here we used \", _jsx(_components.code, {\n        children: \"jdk.internal.panama.CodeSnippet\"\n      }), \" class to get MethodHandle\\nto native code. And yes, this package is functionally important, it\\nactually means internal API, so you very probably won’t be able to use\\nit.\\nAs an\\n\", _jsx(_components.a, {\n        href: \"http://hg.openjdk.java.net/panama/panama/hotspot/file/6818b4b2e922/src/cpu/x86/vm/sharedRuntime_x86_64.cpp#l1141\",\n        children: \"arguments\"\n      }), \"\\nof \", _jsx(_components.code, {\n        children: \"MethodType#methodType\"\n      }), \" you can pass primitives and some special\\nclasses like \", _jsx(_components.code, {\n        children: \"Long2\"\n      }), \" (128 bit register), \", _jsx(_components.code, {\n        children: \"Long4\"\n      }), \" (256 bit register) and\\n\", _jsx(_components.code, {\n        children: \"Long8\"\n      }), \" (512 bit register).\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Based on what you’ve seen above, you could say that we were able to use\\nJNI before, so what’s the point of using inline ASM? This is true, but\\nthe thing is the C2 compiler can easily inline the code snippet. So, it\\ngives you an opportunity (if you’re crazy enough) to write your own JVM\\nintrinsic without coding it in the JVM.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let’s compare assembly produced by the JVM after compiling and inlining\\nfor every method.\"\n    }), \"\\n\", _jsxs(\"table\", {\n      className: \"fit-table\",\n      children: [_jsxs(\"colgroup\", {\n        children: [_jsx(\"col\", {\n          style: {\n            width: \"33%\"\n          }\n        }), _jsx(\"col\", {\n          style: {\n            width: \"33%\"\n          }\n        }), _jsx(\"col\", {\n          style: {\n            width: \"33%\"\n          }\n        })]\n      }), _jsx(\"thead\", {\n        children: _jsxs(\"tr\", {\n          class: \"header\",\n          children: [_jsx(\"th\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Plain Java\"\n          }), \"\\n\", _jsx(\"th\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"CodeSnippet ASM\"\n          }), \"\\n\", _jsx(\"th\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"JNI\"\n          })]\n        })\n      }), _jsx(\"tbody\", {\n        children: _jsxs(\"tr\", {\n          class: \"odd\",\n          children: [_jsx(\"td\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: _jsx(\"pre\", {\n              class: \"x86asm\",\n              children: _jsx(_components.pre, {\n                children: _jsxs(_components.code, {\n                  className: \"hljs language-x86asm\",\n                  children: [\"[Verified Entry Point]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"sub\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x18\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"QWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x10\"\n                  }), \"],\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*synch entry\"\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"\\njitresult:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1c\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x18\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x20\"\n                  }), \"]  \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*iadd\"\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"\\n\\nexit:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x10\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"pop\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"test\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rip\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x15b4ea60\"\n                  }), \"],\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(\"td\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: _jsx(\"pre\", {\n              class: \"x86asm\",\n              children: _jsx(_components.pre, {\n                children: _jsxs(_components.code, {\n                  className: \"hljs language-x86asm\",\n                  children: [\"[Verified Entry Point]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"sub\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x18\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"QWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x10\"\n                  }), \"],\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*sync entry\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r10\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"esi\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1c\"\n                  }), \"] \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*field b\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r10\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x20\"\n                  }), \"] \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*field c\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edi\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r10\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x18\"\n                  }), \"] \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*field a\"\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"\\nsnippet:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rdi\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rdx\"\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"\\nexit:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x10\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"pop\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"test\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rip\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x16d21852\"\n                  }), \"],\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(\"td\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: _jsx(\"pre\", {\n              class: \"x86asm\",\n              children: _jsx(_components.pre, {\n                children: _jsxs(_components.code, {\n                  className: \"hljs language-x86asm\",\n                  children: [\"[Verified Entry Point]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \"-\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x14000\"\n                  }), \"],\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"push\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"sub\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x10\"\n                  }), \"           \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*sync entry\"\n                  }), \"\\n\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1c\"\n                  }), \"]  \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*field b\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ecx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x20\"\n                  }), \"]  \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*field c\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"esi\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x18\"\n                  }), \"]  \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*field a\"\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"\\nnative_call:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"xchg\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ax\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"call\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x00007f7ab5668738\"\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"\\nexit:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x10\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"pop\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"test\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"DWORD\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rip\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x166add39\"\n                  }), \"],\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"ret\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*invokestatic s_nat\"\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"\\nruntime_call_rethrow_Java:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"mov\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rax\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsp\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x10\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"pop\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"jmp\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x00007f7aadc7b6e0\"\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As you can see here the only difference between the C2 JIT version and\\nour CodeSnippet is the movement of arguments between registers to\\nsatisfy calling convention. And the C2 perfectly inlined exactly the\\nsame piece of code as shown above. At the same time, JNI performs a real\\nnative call.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But what’s the point of writing inline asm snippets in Java? Usually\\nthere is no reason to do so, the C2 is able to compile your code into\\nsomething that works much faster. But there are several things that the\\nC2 can’t do efficiently. The most important is that the C2 can’t rewrite\\nyour algorithm using SIMD operations yet.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"go-deeper-to-hidden-places\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#go-deeper-to-hidden-places\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Go deeper to hidden places\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Usually our applications are not about A+B+C functions, but about some\\nreal code. And our applications can contain, say, the function that\\ncalculates checksums of buffers. A perfectly real task, that you can\\nencounter in different kinds of software.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let’s imagine our application has a little function called checksum that\\nmakes a sum of bytes in the buffer and gives us hash [0, 256) as a\\nresult.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here’s the code:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-java\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"checksumPlainJava\"\n        }), _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"(ByteBuffer buffer, \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" size)\"]\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"checksum\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"i\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"; i < size; ++i) {\\n        checksum += buffer.get(i);\\n    }\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// make it unsigned first to avoid negative result\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \") (Integer.toUnsignedLong(checksum) % \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"256\"\n        }), \");\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In our application we operate big byte buffers and we have to calculate\\nchecksums very often. We discovered that this checksum function is our\\nbottleneck. And we need to optimize it. What options do we have?\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"jni\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#jni\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"JNI\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You may see on the last line the ugly operation where we are trying to\\nconvert our signed int to unsigned to get the proper result. Of course,\\nit’s the bottleneck you might think, isn’t it? The cool C++ has unsigned\\nvariables - let’s make a JNI call!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ok, here we go, C++ code:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"JNI checksum\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-cpp\",\n        children: [_jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"JNIEXPORT jint JNICALL \", _jsx(_components.span, {\n            className: \"hljs-title\",\n            children: \"Java_me_serce_panex_ChecksumBenchmark_nativePlainChecksum\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(JNIEnv * env, jclass clz, jlong addr, jint targetLength)\"\n          }), \" \"]\n        }), \"{\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"char\"\n        }), \" *target = \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"reinterpret_cast\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"char\"\n        }), \" *>(addr);\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"unsigned\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" checksum = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" i = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"; i < targetLength; ++i) {\\n        checksum += (\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"unsigned\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \") target[i];\\n    }\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" checksum % \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"256\"\n        }), \";\\n}\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now we have to check the performance. We may expect incredible results.\\nFor performance measurement we will be using\\n\", _jsx(_components.a, {\n        href: \"http://openjdk.java.net/projects/code-tools/jmh/\",\n        children: \"JMH\"\n      }), \", the de-facto\\nstandard in Java benchmarking. You can find a great deal of articles\\nanswering the question \\\"why JMH?\\\" on the internet.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is no way to get a native memory address for DirectByteBuffer, so\\nwe are using reflection trick here to get the field that contains this\\naddress. Now we’re able to access memory from C++ code directly. We’re\\nchecking how fast the function is in case of \", _jsx(_components.em, {\n        children: \"4\"\n      }), \"/\", _jsx(_components.em, {\n        children: \"8096\"\n      }), \"/\", _jsx(_components.em, {\n        children: \"129536\"\n      }), \" size\\nbuffers.\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"Benchmark setup\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-java\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" ByteBuffer buffer;\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"long\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"address\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@Param({\\\"4\\\", \\\"8096\\\", \\\"129536\\\"})\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"size\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"public\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"long\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getAddress\"\n        }), _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"(ByteBuffer buffy)\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throws\"\n        }), \" Throwable {\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Field\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"address\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" Buffer.class.getDeclaredField(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"address\\\"\"\n        }), \");\\n    address.setAccessible(\", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \");\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" address.getLong(buffy);\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@Setup\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"public\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setup\"\n        }), _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"()\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throws\"\n        }), \" Throwable {\\n    buffer = ByteBuffer.allocateDirect(size).order(ByteOrder.nativeOrder());\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ThreadLocalRandom\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"random\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" ThreadLocalRandom.current();\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"i\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"; i < size / \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \"; i++) {\\n        buffer.putInt(random.nextInt());\\n    }\\n    address = getAddress(buffer);\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"And the results\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"\",\n        children: \"Benchmark                       (size)  Mode  Cnt   Score    Error  Units\\nChecksumBenchmark.JNI_Checksum       4  avgt    3   0.009 ±  0.001  us/op\\nChecksumBenchmark.JNI_Checksum    8096  avgt    3   3.085 ±  0.039  us/op\\nChecksumBenchmark.JNI_Checksum  129536  avgt    3  48.879 ±  5.655  us/op\\nChecksumBenchmark.plainJava          4  avgt    3   0.006 ±  0.001  us/op\\nChecksumBenchmark.plainJava       8096  avgt    3   2.190 ±  0.834  us/op\\nChecksumBenchmark.plainJava     129536  avgt    3  34.452 ±  3.341  us/op\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As you can see, the JNI loop is slower. But what happened? Could it mean\\nthat JNI is really slow? As we saw earlier CodeSnippet is faster. So we\\ncan try the same with code, but written using CodeSnippet!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"However, it may be hard to write code in pure machine codes, so we can\\nmake it another way. We can write C++ code; then compile it, open it in\\na hex editor and put the machine code into our method. Sounds creepy,\\nbut it’s possible.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Several things you should be careful about:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"You shouldn’t have a ret instruction, JVM will take care of it.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"You should look carefully through your assembly code to be sure that\\nit doesn’t try to access outside memory using an outside method.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"And, finally, you should be careful about calling convention\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsxs(_components.p, {\n        children: [\"Typical \", _jsx(_components.code, {\n          children: \"ls\"\n        }), \" picture that you can see get after several experiments\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/wild-panama/crashes.png\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here’s the code and we’re ready to run benchmark again\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-java\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"final\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MethodHandle\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"codeSnippetChecksum\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" jdk.internal.panama.CodeSnippet.make(\\n        \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"checksum\\\"\"\n        }), \", MethodType.methodType(\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \".class, \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"long\"\n        }), \".class, \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \".class),\\n        isX64(),\\n        \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x48\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x85\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xF6\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x74\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x1E\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x48\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x01\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xFE\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x31\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xC0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x66\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x0F\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x1F\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x44\"\n        }), \",\\n        \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x00\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x00\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x0F\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xBE\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x17\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x48\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x83\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xC7\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x01\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x01\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xD0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x48\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x39\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xF7\"\n        }), \",\\n        \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x75\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xF2\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x0F\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xB6\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xC0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xEB\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x02\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x31\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xC0\"\n        }), \");\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@Benchmark\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"public\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"codeSnippetChecksum\"\n        }), _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"()\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throws\"\n        }), \" Throwable {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \") plainC_O2.invoke(address, size);\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"Result\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"\",\n        children: \"Benchmark                              (size)  Mode  Cnt   Score    Error  Units\\nChecksumBenchmark.JNI_Checksum              4  avgt    4   0.008 ±  0.001  us/op\\nChecksumBenchmark.JNI_Checksum           8096  avgt    4   3.060 ±  0.056  us/op\\nChecksumBenchmark.JNI_Checksum         129536  avgt    4  49.865 ±  2.135  us/op\\nChecksumBenchmark.codeSnippetChecksum       4  avgt    4   0.005 ±  0.001  us/op\\nChecksumBenchmark.codeSnippetChecksum    8096  avgt    4   2.806 ±  0.243  us/op\\nChecksumBenchmark.codeSnippetChecksum  129536  avgt    4  48.911 ±  0.448  us/op\\nChecksumBenchmark.plainJava                 4  avgt    4   0.006 ±  0.001  us/op\\nChecksumBenchmark.plainJava              8096  avgt    4   2.163 ±  0.035  us/op\\nChecksumBenchmark.plainJava            129536  avgt    4  34.414 ±  0.984  us/op\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And finally, you can observe pretty much the same results. The only\\nnoticeable difference is for buffers that have a very small size. And\\neven the CodeSnippet version is slower than the code produced by JIT.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The key is I used -O2 GCC option, which doesn’t perform a lot of\\ninteresting optimizations.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"g++ -shared -fpic  -Wall -O2   -I/usr/include ... checksum.c -o libchecksum.so\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And as a result, GCC didn’t perform well, and we’ve got an almost\\nliteral translation of that we wrote in C++ to assembly. At the same\\ntime, JIT gave us a good unrolled loop.\"\n    }), \"\\n\", _jsxs(\"table\", {\n      children: [_jsxs(\"colgroup\", {\n        children: [_jsx(\"col\", {\n          style: {\n            width: \"50%\"\n          }\n        }), _jsx(\"col\", {\n          style: {\n            width: \"50%\"\n          }\n        })]\n      }), _jsx(\"thead\", {\n        children: _jsxs(\"tr\", {\n          class: \"header\",\n          children: [_jsx(\"th\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"JIT\"\n          }), \"\\n\", _jsx(\"th\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"GCC O2\"\n          })]\n        })\n      }), _jsx(\"tbody\", {\n        children: _jsxs(\"tr\", {\n          class: \"odd\",\n          children: [_jsx(\"td\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: _jsx(\"pre\", {\n              class: \"x86asm\",\n              children: _jsx(_components.pre, {\n                children: _jsxs(_components.code, {\n                  className: \"hljs language-x86asm\",\n                  children: [\"....\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"loop:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r10d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x7\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r8d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x6\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r11d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x5\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ebx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x4\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ecx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x3\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x2\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edi\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ebp\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x0\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ebp\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edi\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edx\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ecx\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ebx\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r11d\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r8d\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r10d\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r9d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x8\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \"; i+= 8\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"cmp\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r9d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r13d\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"jl\"\n                  }), \"     \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"loop\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*if_icmpge\"\n                  }), \"\\n....\\n\"]\n                })\n              })\n            })\n          }), _jsx(\"td\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: _jsx(\"pre\", {\n              class: \"x86asm\",\n              children: _jsx(_components.pre, {\n                children: _jsxs(_components.code, {\n                  className: \"hljs language-x86asm\",\n                  children: [\"...\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"loop:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edi\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rdx\"\n                  }), \"*\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"1\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rsi\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \"; i+= 1\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edi\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"cmp\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ecx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"esi\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \"; if return\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"jg\"\n                  }), \"     \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"loop\"\n                  }), \"\\n ...\\n\"]\n                })\n              })\n            })\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"So, we can use -O3 if we need more optimizations.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"With -03\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"\",\n        children: \"Benchmark                                (size)  Mode  Cnt   Score    Error  Units\\nChecksumBenchmark.JNI_Checksum                4  avgt    4   0.009 ±  0.001  us/op\\nChecksumBenchmark.JNI_Checksum             8096  avgt    4   3.089 ±  0.066  us/op\\nChecksumBenchmark.JNI_Checksum           129536  avgt    4  49.481 ±  2.071  us/op\\nChecksumBenchmark.codeSnippetChecksum         4  avgt    4   0.005 ±  0.001  us/op\\nChecksumBenchmark.codeSnippetChecksum      8096  avgt    4   2.784 ±  0.153  us/op\\nChecksumBenchmark.codeSnippetChecksum    129536  avgt    4  49.350 ±  2.208  us/op\\nChecksumBenchmark.codeSnippetChecksumO3       4  avgt    4   0.006 ±  0.001  us/op\\nChecksumBenchmark.codeSnippetChecksumO3    8096  avgt    4   0.621 ±  0.022  us/op\\nChecksumBenchmark.codeSnippetChecksumO3  129536  avgt    4   9.672 ±  0.201  us/op\\nChecksumBenchmark.plainJava                   4  avgt    4   0.006 ±  0.001  us/op\\nChecksumBenchmark.plainJava                8096  avgt    4   2.161 ±  0.089  us/op\\nChecksumBenchmark.plainJava              129536  avgt    4  34.825 ±  1.178  us/op\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There is a simple explanation why GCC -03 version is faster than code\\nemitted by JIT. Here GCC was able to vectorize our loop. So, it used\\nSIMD instructions which gave our processor an ability to \\\"parallelize\\\"\\nexecution.\"\n    }), \"\\n\", _jsxs(\"table\", {\n      children: [_jsxs(\"colgroup\", {\n        children: [_jsx(\"col\", {\n          style: {\n            width: \"50%\"\n          }\n        }), _jsx(\"col\", {\n          style: {\n            width: \"50%\"\n          }\n        })]\n      }), _jsx(\"thead\", {\n        children: _jsxs(\"tr\", {\n          class: \"header\",\n          children: [_jsx(\"th\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"JIT\"\n          }), \"\\n\", _jsx(\"th\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"GCC O3\"\n          })]\n        })\n      }), _jsx(\"tbody\", {\n        children: _jsxs(\"tr\", {\n          class: \"odd\",\n          children: [_jsx(\"td\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: _jsx(\"pre\", {\n              class: \"x86asm\",\n              children: _jsx(_components.pre, {\n                children: _jsxs(_components.code, {\n                  className: \"hljs language-x86asm\",\n                  children: [\"....\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"loop:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r10d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x7\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r8d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x6\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r11d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x5\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ebx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x4\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ecx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x3\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edx\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x2\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edi\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"movsx\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ebp\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"BYTE\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"PTR\"\n                  }), \" [\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"rbp\"\n                  }), \"+\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x0\"\n                  }), \"]\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ebp\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edi\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"edx\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ecx\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ebx\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r11d\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r8d\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"eax\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r10d\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r9d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x8\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \"; i+= 8\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"cmp\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r9d\"\n                  }), \",\", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r13d\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"jl\"\n                  }), \"     \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"loop\"\n                  }), \"  \", _jsx(_components.span, {\n                    className: \"hljs-comment\",\n                    children: \";*if_icmpge\"\n                  }), \"\\n....\\n\"]\n                })\n              })\n            })\n          }), _jsx(\"td\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: _jsx(\"pre\", {\n              class: \"x86asm\",\n              children: _jsx(_components.pre, {\n                children: _jsxs(_components.code, {\n                  className: \"hljs language-x86asm\",\n                  children: [\"....\\n\", _jsx(_components.span, {\n                    className: \"hljs-symbol\",\n                    children: \"loop:\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"          \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r11\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"add\"\n                  }), \"          \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r8\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x20\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"cmp\"\n                  }), \"          \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r10\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"r11\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpmovsxbw\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm2\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"xmm1\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vextracti128\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"xmm1\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm1\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpmovsxwd\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm3\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"xmm2\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vextracti128\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"xmm2\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm2\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpmovsxbw\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm1\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"xmm1\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpaddd\"\n                  }), \"       \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm0\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm3\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm0\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpmovsxwd\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm2\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"xmm2\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpaddd\"\n                  }), \"       \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm0\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm2\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm0\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpmovsxwd\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm2\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"xmm1\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vextracti128\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"xmm1\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm1\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-number\",\n                    children: \"0x1\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpaddd\"\n                  }), \"       \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm0\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm2\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm0\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpmovsxwd\"\n                  }), \"    \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm1\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"xmm1\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"vpaddd\"\n                  }), \"       \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm0\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm1\"\n                  }), \", \", _jsx(_components.span, {\n                    className: \"hljs-built_in\",\n                    children: \"ymm0\"\n                  }), \"\\n \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"ja\"\n                  }), \"           \", _jsx(_components.span, {\n                    className: \"hljs-keyword\",\n                    children: \"loop\"\n                  }), \"\\n....\\n\"]\n                })\n              })\n            })\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But what if we need more performance? Can we do it better than GCC?\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"simd\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#simd\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"SIMD\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It is possible to write the same code, but using AVX2 (256 byte\\nregisters) instructions. (Thanks,\\n\", _jsx(_components.a, {\n        href: \"https://twitter.com/kellylittlepage\",\n        children: \"@kellylittlepage\"\n      }), \", for an \", _jsx(_components.a, {\n        href: \"https://www.klittlepage.com/2013/12/10/accelerated-fix-processing-via-avx2-vector-instructions/\",\n        children: \"awesome\\narticle\"\n      }), \"\\nwhere I’ve read how to do it).\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"C++ function that will be compiled and putted in CodeSnippet\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-cpp\",\n        children: [_jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title\",\n            children: \"avxChecksumAVX2\"\n          }), _jsxs(_components.span, {\n            className: \"hljs-params\",\n            children: [\"(\", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"char\"\n            }), \" *\", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"const\"\n            }), \" target, \", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"size_t\"\n            }), \" targetLength)\"]\n          }), \" \"]\n        }), \"{\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"const\"\n        }), \" __m256i zeroVec = _mm256_setzero_si256();\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"short\"\n        }), \" d[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"16\"\n        }), \"] = {\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \",\\n                   \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \"};\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"const\"\n        }), \" __m256i oneVec = *((__m256i *) d);\\n    __m256i accum = _mm256_setzero_si256();\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"unsigned\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" checksum = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"size_t\"\n        }), \" offset = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (targetLength >= \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (; offset <= targetLength - \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \"; offset += \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \") {\\n            __m256i vec = _mm256_loadu_si256(\\n                    \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"reinterpret_cast\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"const\"\n        }), \" __m256i *>(target + offset));\\n            __m256i vl = _mm256_unpacklo_epi8(vec, zeroVec);\\n            __m256i vh = _mm256_unpackhi_epi8(vec, zeroVec);\\n\\n            accum = _mm256_add_epi32(accum, _mm256_madd_epi16(vl, oneVec));\\n            accum = _mm256_add_epi32(accum, _mm256_madd_epi16(vh, oneVec));\\n        }\\n    }\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (; offset < targetLength; ++offset) {\\n        checksum += (\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \") target[offset];\\n    }\\n\\n    accum = _mm256_add_epi32(accum, _mm256_srli_si256(accum, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \"));\\n    accum = _mm256_add_epi32(accum, _mm256_srli_si256(accum, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \"));\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (_mm256_extract_epi32(accum, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \") + _mm256_extract_epi32(accum, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \") +\\n            checksum) % \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"256\"\n        }), \";\\n}\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This is how a simple checksum function looks like after rewriting for\\nvectorizing execution. Here, some GCC intrinsics like\\n\", _jsx(_components.a, {\n        href: \"https://software.intel.com/en-us/node/524002\",\n        children: \"_mm256_unpacklo_epi8\"\n      }), \"\\nand\\n\", _jsx(_components.a, {\n        href: \"https://software.intel.com/en-us/node/513929\",\n        children: \"_mm256_add_epi32\"\n      }), \"\\nare used. GCC has a special implementation for this functions that uses\\nAVX2 instructions. Almost always it is just one instruction.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://software.intel.com/sites/landingpage/IntrinsicsGuide/\",\n        children: \"Here\"\n      }), \"\\nyou can find a full guide of Intel intrinsics\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This functions isn’t so easy to understand, but how fast is it?\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"Result\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"\",\n        children: \"ChecksumBenchmark.JNI_Checksum                4  avgt    4   0.008 ±  0.001  us/op\\nChecksumBenchmark.JNI_Checksum             8096  avgt    4   3.128 ±  0.024  us/op\\nChecksumBenchmark.JNI_Checksum           129536  avgt    4  49.629 ±  0.694  us/op\\nChecksumBenchmark.avx2Impl                    4  avgt    4   0.014 ±  0.001  us/op\\nChecksumBenchmark.avx2Impl                 8096  avgt    4   0.239 ±  0.018  us/op\\nChecksumBenchmark.avx2Impl               129536  avgt    4   4.128 ±  0.052  us/op\\nChecksumBenchmark.codeSnippetChecksum         4  avgt    4   0.005 ±  0.001  us/op\\nChecksumBenchmark.codeSnippetChecksum      8096  avgt    4   2.795 ±  0.044  us/op\\nChecksumBenchmark.codeSnippetChecksum    129536  avgt    4  49.656 ±  0.733  us/op\\nChecksumBenchmark.codeSnippetChecksumO3       4  avgt    4   0.006 ±  0.001  us/op\\nChecksumBenchmark.codeSnippetChecksumO3    8096  avgt    4   0.630 ±  0.004  us/op\\nChecksumBenchmark.codeSnippetChecksumO3  129536  avgt    4   9.810 ±  0.100  us/op\\nChecksumBenchmark.plainJava                   4  avgt    4   0.006 ±  0.001  us/op\\nChecksumBenchmark.plainJava                8096  avgt    4   2.224 ±  0.122  us/op\\nChecksumBenchmark.plainJava              129536  avgt    4  35.042 ±  0.252  us/op\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Awesome it is 8x times faster than our original code.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"java-way\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#java-way\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Java way\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let’s say, now we met our performance requirements, but can we make it\\nmore readable than just an ugly blob of ASM code produced by GCC? It is\\npossible to save the main loop inside Java and use Long4 vectors to pass\\ndata.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"Java version of that scary function\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-java\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"public\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"VectorIntrinsics\"\n        }), \" {\\n    ...\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"final\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MethodHandle\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"_mm256_loadu_si256\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" jdk.internal.panama.CodeSnippet.make(\\n            \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"_mm256_loadu_si256\\\"\"\n        }), \", MethodType.methodType(Long4.class, \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"long\"\n        }), \".class),\\n            \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \",\\n            \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xC5\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0xFE\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x6F\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x06\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// vmovdqu ymm0, YMMWORD PTR [rdi]\"\n        }), \"\\n    );\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"public\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" Long4 \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_mm256_loadu_si256\"\n        }), _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" address)\"]\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throws\"\n        }), \" Throwable {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (Long4) _mm256_loadu_si256.invoke(address);\\n    }\\n    ...\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"JAVA_avxChecksumAVX2\"\n        }), _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"(ByteBuffer buffer, \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" target, \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" targetLength)\"]\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throws\"\n        }), \" Throwable {\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"zeroVec\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" Long4.ZERO;\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"oneVec\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" ones;\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"accum\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" Long4.ZERO;\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"checksum\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"offset\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (targetLength >= \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \") {\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (; offset <= targetLength - \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \"; offset += \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \") {\\n                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"vec\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_loadu_si256(target + offset);\\n                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"vl\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_unpacklo_epi8(vec, zeroVec);\\n                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"vh\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_unpackhi_epi8(vec, zeroVec);\\n\\n                accum = _mm256_add_epi32(accum, _mm256_madd_epi16(vl, oneVec));\\n                accum = _mm256_add_epi32(accum, _mm256_madd_epi16(vh, oneVec));\\n            }\\n        }\\n\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (; offset < targetLength; ++offset) {\\n            checksum += (\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \") buffer.get(offset);\\n        }\\n\\n        accum = _mm256_add_epi32(accum, _mm256_srli_si256_4(accum));\\n        accum = _mm256_add_epi32(accum, _mm256_srli_si256_8(accum));\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"long\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"finalChecksum\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_extract_epi32_0(accum) + _mm256_extract_epi32_4(accum)\\n                        + checksum;\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \") (Integer.toUnsignedLong((\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"int\"\n        }), \") finalChecksum) % \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"256\"\n        }), \");\\n    }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now it is written in the right way. We wrote a lot of small methods;\\nevery method represents one small AVX2 instruction. And the main loop is\\nwritten in Java. This code is reusable; it is much easier to write and\\nunderstand than trying to write one big ASM blob. But, a big surprise,\\nit is much slower than the ugly ASM blob.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And again, JMH will help us to find answer with gc profiler.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"That’s why\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"\",\n        children: \"JAVA_avx2Impl                                129536  avgt    4      30.394 ±     6.813   us/op\\nJAVA_avx2Impl:·gc.alloc.rate                 129536  avgt    4         NaN              MB/sec\\nJAVA_avx2Impl:·gc.count                      129536  avgt    4      34.000              counts\\nJAVA_avx2Impl:·gc.time                       129536  avgt    4      39.000                  ms\\navx2Impl                                     129536  avgt    4       4.192 ±     0.246   us/op\\navx2Impl:·gc.alloc.rate                      129536  avgt    4         NaN              MB/sec\\navx2Impl:·gc.count                           129536  avgt    4         ≈ 0              counts\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"JAVA_avxChecksumAVX2\"\n      }), \" produces high allocation rate. Despite the fact\\nthat vector types work with escape analysis really well, this loop\\nbreaks our hopes. Because Long4 is immutable, we have to save \", _jsx(_components.code, {\n        children: \"accum\"\n      }), \" to\\nthe same variable on every loop iteration. Escape analysis can’t\\nunderstand this and we are getting a lot of allocations of boxed vector\\nvalues.\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"Problematic code for Escape Analysis\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-java\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"accum\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" Long4.ZERO;\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (; offset <= targetLength - \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \"; offset += \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"vec\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_loadu_si256(target + offset);\\n    accum = operation(accum, vec); \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// EA, you are drunk, go home\"\n        }), \"\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This problem is known issue. Very probably it will be fixed soon, but\\nhow can it be solved now?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As a workaround, we may try to create a temporary buffer and use a pair\\nof \", _jsx(_components.code, {\n        children: \"_mm256_loadu_si256\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"_mm256_storeu_si256\"\n      }), \" instructions on every\\niteration. That intrinsics use \", _jsx(_components.code, {\n        children: \"vmovdqu\"\n      }), \" instruction to load/store\\nregister value to the memory.\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"GC free solution\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-java\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"final\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ByteBuffer\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"tmpBuf\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" ...\\n...\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (; offset <= targetLength - \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \"; offset += \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"vec\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_loadu_si256(target + offset);\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"accum\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_loadu_si256(tmpBuffAddr);\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"result\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" operation(accum, vec);\\n    _mm256_storeu_si256(tmpBuffAddr, result);\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"Results\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"\",\n        children: \"Benchmark                                       (size)  Mode  Cnt   Score   Error   Units\\nChecksumBenchmark.JAVA_avx2Impl                 129536  avgt    4  23.837 ± 0.064   us/op\\nChecksumBenchmark.JAVA_avx2Impl:·gc.alloc.rate  129536  avgt    4     NaN          MB/sec\\nChecksumBenchmark.JAVA_avx2Impl:·gc.count       129536  avgt    4     ≈ 0          counts\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now function is GC free; there is no garbage anymore and it is faster,\\nbut actually it’s still quite slow. To understand why we should use a\\nprofiler, but simple solutions like Yourkit or JProfiler won’t help us,\\nwe must work on instruction level. Thank goodness, JMH has an excellent\\nsupport of perf profiler, you need just to pass an option to it (don’t\\nforget to install perf on your system before).\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-x86asm\",\n        children: [\" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"12.39\"\n        }), \"%   \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"26.58\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vmovdqu\"\n        }), \" YMMWORD \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"PTR\"\n        }), \" [\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rsp\"\n        }), \"+\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x40\"\n        }), \"],\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \"\\n \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"12.88\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2.85\"\n        }), \"%    movabs \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"r10\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x6d61010e8\"\n        }), \"\\n           \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.01\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vmovdqu\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm1\"\n        }), \",YMMWORD \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"PTR\"\n        }), \" [\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"r10\"\n        }), \"+\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x10\"\n        }), \"]\\n  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.01\"\n        }), \"%             \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vmovdqu\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \",YMMWORD \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"PTR\"\n        }), \" [\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rsp\"\n        }), \"+\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x20\"\n        }), \"]\\n                    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vpunpcklbw\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm1\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4.42\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.03\"\n        }), \"%    movabs \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"r10\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x6d61010b8\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.01\"\n        }), \"%             \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vmovdqu\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm1\"\n        }), \",YMMWORD \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"PTR\"\n        }), \" [\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"r10\"\n        }), \"+\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x10\"\n        }), \"]\\n  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.02\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.01\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vpmaddwd\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm1\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.02\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.01\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vpmaddwd\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm1\"\n        }), \"\\n           \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.02\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vmovdqu\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm1\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4.20\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2.95\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vmovdqu\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \",YMMWORD \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"PTR\"\n        }), \" [\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rsp\"\n        }), \"+\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x40\"\n        }), \"]\\n  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8.45\"\n        }), \"%   \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22.88\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vpaddd\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm1\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \"\\n \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"12.91\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5.79\"\n        }), \"%    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"vmovdqu\"\n        }), \" YMMWORD \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"PTR\"\n        }), \" [\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rsp\"\n        }), \"+\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0x40\"\n        }), \"],\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ymm0\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As you can see, we are spending an enormous amount of time just to load\\nout the temporary buffer and store it back just to avoid GC. So, we can\\nrewrite algorithm a little bit instead. We’ll be saving a final result\\nto \", _jsx(_components.code, {\n        children: \"checksum\"\n      }), \" variable right in the loop instead of using it further in\\nvector calculations.\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"Here the code\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-java\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (; offset <= targetLength - \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \"; offset += \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"32\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"vec\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_loadu_si256(target + offset);\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"lVec\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_unpacklo_epi8(vec, zeroVec);\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"hVec\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_unpackhi_epi8(vec, zeroVec);\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Long4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"sum\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" _mm256_add_epi16(lVec, hVec);\\n    sum = _mm256_hadd_epi16(sum, sum);\\n    sum = _mm256_hadd_epi16(sum, sum);\\n    sum = _mm256_hadd_epi16(sum, sum);\\n    checksum += _mm256_extract_epi16_0(sum) + _mm256_extract_epi16_15(sum);\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"formalpara-title\",\n      children: _jsx(_components.p, {\n        children: \"Benchmark results\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"\",\n        children: \"Benchmark                        (size)  Mode  Cnt   Score    Error  Units\\nChecksumBenchmark.JAVA_avx2Impl       4  avgt    4   0.005 ±  0.001  us/op\\nChecksumBenchmark.JAVA_avx2Impl    8096  avgt    4   1.245 ±  0.028  us/op\\nChecksumBenchmark.JAVA_avx2Impl  129536  avgt    4  20.095 ±  0.314  us/op\\nChecksumBenchmark.avx2Impl            4  avgt    4   0.013 ±  0.001  us/op\\nChecksumBenchmark.avx2Impl         8096  avgt    4   0.211 ±  0.004  us/op\\nChecksumBenchmark.avx2Impl       129536  avgt    4   3.317 ±  0.077  us/op\\nChecksumBenchmark.plainJava           4  avgt    4   0.005 ±  0.001  us/op\\nChecksumBenchmark.plainJava        8096  avgt    4   2.109 ±  0.035  us/op\\nChecksumBenchmark.plainJava      129536  avgt    4  33.503 ±  0.227  us/op\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This version of the code is even faster, but it can’t achieve the\\nperformance of big ugly assembly blob yet because escape analysis is\\nlike a big stone on our way. However this code can be maintained easily,\\nand this API is under active development; there are a lot of experiments\\nhappening right now. So, you will have fought this ugly blob when these\\nfeatures are released.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Moreover, all that machine snippets and direct Long* vector parameters\\nare really low-level API. Prototypes of high-level API you can find\\n\", _jsx(_components.a, {\n        href: \"http://hg.openjdk.java.net/panama/panama/jdk/file/c5a104d33632/test/panama/vector-api-boxed-variant/src/test/java/com/oracle/vector/BytesLong2Test.java\",\n        children: \"here\"\n      }), \"\\nand\\n\", _jsx(_components.a, {\n        href: \"http://hg.openjdk.java.net/panama/panama/jdk/file/c5a104d33632/test/panama/vector-api-patchable/src/test/java/SnippetTest.java\",\n        children: \"here\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I think that’s a perfect point to end a journey through the jungle of\\nPanama. We have seen enough crazy things. I’ll be glad to hear any\\ncomments from you. You can find all the experiments\\n\", _jsx(_components.a, {\n        href: \"https://github.com/SerCeMan/panama-article\",\n        children: \"here\"\n      }), \" (don’t forget to\\nbuild your own JDK before running the benchmarks). I’ll be glad to hear\\nany comments from you.\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"conclusions\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#conclusions\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Conclusions\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Project Panama will bring us great features, but these are likely to\\narrive much further down the line\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Nothing is impossible, even running an inline assembler from Java\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"There are a lot of features that can be done in Java with Vector API\\nand Machine Code Snippets already, although it is only the beginning\\nof the story.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Compiler can optimize your code really well, most probably better than\\nyou.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"It is very important to measure performance while you are doing\\noptimizations. Or else you can make it even worse.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Seeing how your code will work in the future will help you to better\\nunderstand how it works now.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"thanks-to\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#thanks-to\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Thanks to\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://twitter.com/kellylittlepage\",\n          children: \"@kellylittlepage\"\n        }), \" for an awesome article about AVX instruction\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://twitter.com/harrigan_shane\",\n          children: \"@harrigan_shane\"\n        }), \" for comments about my writing style\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://twitter.com/iwan0www\",\n          children: \"@iwan0www\"\n        }), \" for comments and suggestions regarding this post\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"You for reading it\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"discuss-on\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#discuss-on\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Discuss on\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://twitter.com/SerCeMan/status/737889841132752896\",\n          children: \"Twitter\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Pure assembly in the forest of Panama","description":"Empty","date":"2016-06-01"}},"frontMatter":{"title":"Pure assembly in the forest of Panama","description":"Empty","date":"2016-06-01"}},"__N_SSG":true}